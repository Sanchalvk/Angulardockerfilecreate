name: Build and Push Docker Image

on:
  push:
    tags:
      - 'v*.*.*' # Trigger only on new Git tags like v1.0.0, v1.0.1 etc.
    # Removed 'branches: - main' as per request to only use tag-based versioning

env:
  DOCKER_REPO: sanchalkhedkar/asas # Defines your Docker Hub repository.

jobs: 
  build_and_push:
    runs-on: ubuntu-latest # Standard runner environment.

    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Gets your code.

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3 # Recommended for modern Docker builds (multi-platform, caching)

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: sanchalkhedkar
          password: dckr_pat_yC7BqB9FPf8d_ZT9M_A4dktjrWo
          
      - name: Extract Docker metadata (tags and labels)
        id: meta # Assigns an ID to this step to reference its outputs later
        uses: docker/metadata-action@v5 # Action to generate Docker tags and labels
        with:
          images: ${{ env.DOCKER_REPO }} # The base image name
          tags: |
            # Rule: Apply Semantic Versioning tag (e.g., '1.0.0' from 'v1.0.0' Git tag)
            # This will only apply if the workflow was triggered by a 'v*.*.*' tag push.
            # This is now the ONLY tagging rule.
            type=semver,pattern=v{{version}},enable=${{ startsWith(github.ref, 'refs/tags/') }}

      - name: Debug Docker metadata outputs (Optional - for troubleshooting)
        run: |
          echo "Generated Tags: ${{ steps.meta.outputs.tags }}"
          echo "Generated Labels: ${{ steps.meta.outputs.labels }}"
          echo "Generated Version: ${{ steps.meta.outputs.version }}"
          echo "Generated JSON: ${{ steps.meta.outputs.json }}"

      - name: Build and push Docker image to Docker Hub
        uses: docker/build-push-action@v5 # Action to build and push Docker images
        with:
          context: . # Specifies that the Dockerfile and build context are in the current directory
          push: true # Set to 'true' to push the image to Docker Hub
          tags: ${{ steps.meta.outputs.tags }} # Uses the tags generated by the metadata action
          labels: ${{ steps.meta.outputs.labels }} # Uses the labels generated by the metadata action
          # Optional: Add caching to speed up builds
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Output pushed image info
        run: |
          echo "Image pushed with tags: ${{ steps.meta.outputs.tags }}"
